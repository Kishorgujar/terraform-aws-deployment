version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.x  # Adjust as necessary
    commands:
      - echo "Installing Terraform"
      - curl -o terraform.zip https://releases.hashicorp.com/terraform/$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)/terraform_$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)_linux_amd64.zip
      - unzip terraform.zip
      - sudo mv terraform /usr/local/bin/
      - terraform --version
      - echo "Installing OPA"
      - curl -L -o opa https://github.com/open-policy-agent/opa/releases/latest/download/opa_linux_amd64
      - chmod +x opa
      - sudo mv opa /usr/local/bin/
      - opa version
      - echo "Installing jq for JSON parsing"
      - sudo apt-get update && sudo apt-get install -y jq

  pre_build:
    commands:
      - echo "Pre-build phase"
      - terraform init

  build:
    commands:
      - echo "Build phase"
      - terraform plan -out=tfplan
      - terraform show -json tfplan > tfplan.json
      
      # Evaluate the OPA policy
      - |
        OPA_RESULT=$(opa eval --data policy.rego --input tfplan.json "data.terraform.s3.deny" -o json)
        echo "$OPA_RESULT"

        # Check if the policy evaluation returned 'true'
        if echo "$OPA_RESULT" | jq -r '.result | any(.expressions[].value == true)'; then
            echo "Policy violation: S3 bucket tag modification is not allowed."
            exit 1
        else
            echo "Policy check passed."
        fi

      # Check if the bucket already exists before applying
      - |
        BUCKET_NAME="mybucketaccopa"
        if aws s3api head-bucket --bucket "$BUCKET_NAME" 2>/dev/null; then
            echo "Bucket $BUCKET_NAME already exists. Skipping creation."
        else
            terraform apply -auto-approve tfplan || {
                echo "Error applying Terraform plan."
                exit 1
            }
        fi

  post_build:
    commands:
      - echo "Post-build phase"
      - echo "Build completed on `date`"
